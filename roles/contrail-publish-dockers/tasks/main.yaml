- name: Get container list
  shell: |
    # this magical part returns list of containers from the current buildset
    # e.g. all containers matching '5.0-20180129204006' in their tag
    for repo in $(curl -s {{ docker_registry.fqdn }}:{{ docker_registry.port }}/v2/_catalog | jq -r '.[] | join(" ")'); do
      for tag in $(curl -s {{ docker_registry.fqdn }}:{{ docker_registry.port }}/v2/$repo/tags/list | jq -r '.tags | sort | .[] | select( . | contains("{{ contrail_container_tag }}"))'); do
        echo $repo:$tag
      done
    done
  register: container_list

- name: Pull containers
  shell: "docker pull {{ docker_registry.fqdn }}:{{ docker_registry.port }}/{{ item }}"
  with_items: "{{ container_list.stdout_lines }}"
  become: true
  # Due to some mysterious causes, it seems to fail occassionally, so need to retry it
  register: result
  retries: 3
  delay: 10
  until: result.rc == 0

- name: Log in to dockerhub
  shell: "docker login -u {{ dockerhub.username }} -p {{ dockerhub.password }}"
  no_log: true
  become: true

- name: Retag containers - add dockerhub namespace
  shell: "docker tag {{ docker_registry.fqdn }}:{{ docker_registry.port }}/{{ item }} {{ dockerhub.namespace }}/{{ item }}"
  with_items: "{{ container_list.stdout_lines }}"
  become: true

# XXX: perhaps we should manage "centos7-ocata" part via secrets
- name: Register variable for latest release
  set_fact:
    container_latest_release: "{{ contrail_container_tag }}-centos7-ocata"

- name: Retag containers - add latest tag
  shell: "docker tag {{ dockerhub.namespace }}/{{ item }} {{ dockerhub.namespace }}/{{ item | regex_replace(':.*$',':latest') }}"
  when: item | search(container_latest_release)
  with_items: "{{ container_list.stdout_lines }}"
  become: true

- name: Get local container list
  shell: |
    for i in `docker images | grep contrail | awk '{printf "%s:%s\n", $1,$2;}'`; do
      echo $i;
    done
  register: local_container_list
  become: true

- name: Push all containers
  shell: "docker push {{ item }}"
  # match only containers we want to push to dockerhub - tagged as opencontrailnightly
  when: item | search(dockerhub.namespace)
  with_items: "{{ local_container_list.stdout_lines }}"
  become: true
  # upload fails a lot :(
  register: result
  retries: 3
  delay: 15
  until: result.rc == 0

- name: Cleanup all docker images
  shell: "docker rmi -f {{ item }}"
  with_items: "{{ local_container_list.stdout_lines }}"
  become: true

- name: Log out of Dockerhub
  shell: "docker logout"
  become: true
